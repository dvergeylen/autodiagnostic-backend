{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/DialogNodeSettings.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores/scene.ts","../../src/NewDialogNode.svelte","../../src/stores/tree.ts","../../src/DialogNode.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  export let dialogNode: DialogNode;\n  let showGenderDetails: boolean;\n\n  function toggleShowGenderDetails() {\n    if (typeof dialogNode.text.fr === 'object') {\n      dialogNode.text.fr = dialogNode.text.fr.m;\n    } else {\n      dialogNode.text.fr = {\n        m: dialogNode.text.fr,\n        f: dialogNode.text.fr,\n      }\n    }\n  }\n\n  $: showGenderDetails = (typeof dialogNode.text.fr === 'object');\n</script>\n\n<div class=\"properties\" class:background-gray={dialogNode.character !== \"Player\"}>\n  <div class=\"mb-3\">\n    Protagoniste:\n      <select bind:value={dialogNode.character}>\n        <option value=\"Player\">Joueur</option>\n        <option value=\"NPC1\">NPC1</option>\n      </select>\n  </div>\n\n  <div class=\"mb-3\">\n    FR:\n    {#if typeof dialogNode.text.fr === 'string'}\n      <input type=\"text\" bind:value={dialogNode.text.fr}>\n    {/if}\n     <span on:click={toggleShowGenderDetails} class:is-enabled={showGenderDetails}>m|f</span>\n  </div>\n  {#if typeof dialogNode.text.fr === 'object'}\n    <div class=\"details\">\n      <p>\n        m: <input type=\"text\" bind:value={dialogNode.text.fr.m}>\n      </p>\n      <p>\n        f: <input type=\"text\" bind:value={dialogNode.text.fr.f}>\n      </p>\n    </div>\n  {/if}\n\n\n  <div class=\"mb-3\">\n    EN:\n    <input type=\"text\" bind:value={dialogNode.text.en}>\n  </div>\n\n  <div class=\"mb-3\">\n    URL Image:\n      <input type=\"text\" bind:value={dialogNode.imagePath}>\n  </div>\n\n  <div>\n    Attributions:\n    <div class=\"attribution-container\">\n      <div><input type=\"number\" bind:value={dialogNode.attribution.leader}> Leader</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.bricoleur}> Bricoleur</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.coequipier}> Coequipier</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.planificateur}>Planificateur</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.idealiste}> Idealiste</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.creatif}> Creatif</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.audacieux}>Audacieux</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.explorateur}> Explorateur</div>\n    </div>\n    <span class=\"is-small is-italic\">chiffres entiers positifs ou négatifs</span>\n  </div>\n</div>\n\n<style>\n  div.properties{\n    margin: 0.5em;\n    padding: 1em;\n    font-family: monospace;\n    font-size: 1.2em;\n  }\n  div.properties.background-gray {\n    background-color: #f6f8fa;\n  }\n  .is-enabled {\n    font-weight: bold;\n    padding-top: 0.25em;\n    border: 1px solid black;\n    border-radius: 0.2em;\n    padding-bottom: 0.25em;\n    padding-left: 0.5em;\n    padding-right: 0.5em;\n  }\n  div.details {\n    margin-left: 1em;\n  }\n  div.details p{\n    margin: 0;\n  }\n  .attribution-container {\n    display: grid;\n    grid-template-columns: auto auto;\n    margin-top: 1em;\n    max-width: 50%;\n  }\n  input[type=\"text\"] {\n    width: 90%;\n    max-width: 50em;\n  }\n  input[type=\"number\"] {\n    width: 3em;\n  }\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// This store represents a loaded scenario (from an external json file)\nimport { writable, derived } from 'svelte/store';\nfunction normalizeId(id) {\n    return `${'0'.repeat(5 - String(id).length)}${id}`;\n}\nconst dummyScene = {\n    metadata: {\n        part: 'I',\n        chapter: '1'\n    },\n    dialogNodes: {}\n};\nexport const scene = writable(dummyScene);\nexport const dialogNodeList = derived(scene, $scene => Object.keys($scene.dialogNodes).map((dnKey) => {\n    var _a;\n    return ({\n        id: dnKey,\n        text: `#${normalizeId(dnKey)} - ${((_a = $scene.dialogNodes[dnKey].text.fr) === null || _a === void 0 ? void 0 : _a.m) || $scene.dialogNodes[dnKey].text.fr}`,\n    });\n}));\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dialogNodeList } from './stores/scene';\n  import DialogNodeSettings from './DialogNodeSettings.svelte';\n  import { scene } from './stores/scene';\n\n  export let parentDialogNode: DialogNode;\n  let selectedDialogNodeId: string;\n  let newDialogNode: DialogNode = {\n    \"id\": \"\",\n    \"text\": {\n      \"fr\": '',\n      \"en\": ''\n    },\n    \"nextNodes\": [],\n    \"character\": \"NPC1\",\n    \"attribution\": {\n      \"leader\": 0,\n      \"bricoleur\": 0,\n      \"coequipier\": 0,\n      \"planificateur\": 0,\n      \"idealiste\": 0,\n      \"creatif\": 0,\n      \"audacieux\": 0,\n      \"explorateur\": 0\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n\n  function addExistingDialogNode() {\n    if (!parentDialogNode.nextNodes.includes(selectedDialogNodeId)) {\n      parentDialogNode.nextNodes = [...parentDialogNode.nextNodes, selectedDialogNodeId];\n    }\n    dispatch('toggleShowNewDialogNode', {toggleChildNodes: false});\n  }\n  function addNewDialogNode() {\n    // Computing first available ID\n    const keys: Array<string> = Object.keys($scene.dialogNodes);\n    let newId = keys.reduce((max, i) => Number(i) > max ? Number(i) : max, 1) + 1;\n    newDialogNode.id = String(newId);\n\n    // Updating parent nextNodes\n    $scene.dialogNodes[String(newId)] = newDialogNode;\n    parentDialogNode.nextNodes = [...parentDialogNode.nextNodes, String(newId)];\n    dispatch('toggleShowNewDialogNode', {toggleChildNodes: false});\n  }\n</script>\n\n<h5>Nouvelle réplique</h5>\n <DialogNodeSettings bind:dialogNode={newDialogNode}/>\n\n<button on:click={addNewDialogNode}>Ajouter</button>\n\n\n<h5>Réplique existante</h5>\n\n<select bind:value={selectedDialogNodeId}>\n  {#each $dialogNodeList as dialogNode}\n    <option value={dialogNode.id}>\n      {dialogNode.text}\n    </option>\n  {/each}\n</select>\n\n<button on:click={addExistingDialogNode}>Ajouter</button>","// This store represents the displayed tree, node IDs lists.\n// It's not the content itself, which is found in scene.ts\nimport { derived } from 'svelte/store';\nimport { scene } from './scene';\n// Computes a key value store of incoming nodes, per node.\n// e.g { '4': ['1', '2']} means node '4' has two incoming nodes, '1' and '2\nexport const nodeIncomingVertices = derived(scene, $scene => Object.entries($scene.dialogNodes).reduce((acc, [id, dialogNode]) => {\n    dialogNode.nextNodes.forEach((nextNodeId) => {\n        acc[nextNodeId] = [...(acc[nextNodeId] || []), id];\n    });\n    return acc;\n}, {}));\nexport const orphanDialogNodesIds = derived([scene, nodeIncomingVertices], // stores[0], stores[1]\n// stores[0], stores[1]\n$stores => Object.keys($stores[0].dialogNodes).reduce((acc, dialogNodeId) => (!$stores[1][dialogNodeId] && dialogNodeId !== \"1\" ? [...acc, dialogNodeId] : acc), []));\nexport const multipleIncomingNodesIds = derived([scene, nodeIncomingVertices], // stores[0], stores[1]\n// stores[0], stores[1]\n$stores => Object.keys($stores[0].dialogNodes).reduce((acc, dialogNodeId) => {\n    var _a;\n    return (((_a = $stores[1][dialogNodeId]) === null || _a === void 0 ? void 0 : _a.length) > 1 ? [...acc, dialogNodeId] : acc);\n}, []));\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import DialogNodeSettings from './DialogNodeSettings.svelte';\n  import NewDialogNode from './NewDialogNode.svelte';\n  import { scene } from './stores/scene';\n  import { nodeIncomingVertices } from './stores/tree';\n\n  export let language: string;\n  export let gender: string;\n  export let dialogNode: DialogNode;\n  export let parentNodeId: string = '1';\n  export let renderMultiIncomingVerticesNodeChildren: boolean = false;\n  let showChildNodes: boolean = false;\n  let multipleIncomingNodes: boolean = false;\n  let terminalNode: boolean = false;\n  let showSettings: boolean = false;\n  let showNewDialogNode: boolean = false;\n\n  const t = (text: DialogNode[\"text\"]): string => {\n    return text?.[language]?.[gender] || text?.[language]?.m || text?.[language] || text.fr;\n  }\n\n  function toggleShowChildNodes() {\n    showChildNodes = !showChildNodes;\n\n    // Hide settings if uncollapsed\n    if (!showChildNodes) {\n      showSettings = showChildNodes;\n      showNewDialogNode = showChildNodes;\n    }\n  }\n  function toggleShowSettingsAndChildNodes() {\n    showSettings = !showSettings;\n    showChildNodes = showSettings;\n\n    // Hide new DialogNode if displaying settings\n    if (showSettings) {\n      showNewDialogNode = false;\n    }\n  }\n  function toggleShowNewDialogNode(event) {\n    showNewDialogNode = !showNewDialogNode;\n\n    // We check for false explicitely, as falsy is acceptable\n    if (!(event?.detail?.toggleChildNodes === false)) {\n      showChildNodes = showNewDialogNode;\n    }\n\n    // Hide settings if displaying new DialogNode\n    if (showNewDialogNode) {\n      showSettings = false;\n    }\n  }\n\n  function removeAffiliation() {\n    $scene.dialogNodes[parentNodeId].nextNodes = $scene.dialogNodes[parentNodeId].nextNodes.filter((id) => id !== dialogNode.id);\n  }\n\n  function removeNode() {\n    // Remove references\n    $nodeIncomingVertices[dialogNode.id].forEach((dialogNodeId) => {\n      $scene.dialogNodes[dialogNodeId].nextNodes = $scene.dialogNodes[dialogNodeId].nextNodes.filter((id) => id !== dialogNode.id);\n    });\n\n    delete $scene.dialogNodes[dialogNode.id];\n  }\n\n  $: multipleIncomingNodes = ($nodeIncomingVertices[dialogNode?.id]?.length > 1 ) || false;\n  $: terminalNode = dialogNode?.nextNodes?.length === 0;\n</script>\n<li>\n  <div class=\"dialog-node\" class:is-player={dialogNode.character === \"Player\"}>\n    <p>\n      {#if !terminalNode}\n        <svg on:click={toggleShowChildNodes} class:is-hidden={showChildNodes}>\n          <use href='assets/sprite_icons.svg#angle-double-right' />\n        </svg>\n        <svg on:click={toggleShowChildNodes} class:is-hidden={!showChildNodes}>\n          <use href='assets/sprite_icons.svg#angle-double-down' />\n        </svg>\n        <span class=\"is-primary\"\n          title=\"Ce noeud mène à {dialogNode.nextNodes.length} réplique(s)\"\n          on:click={toggleShowChildNodes}>\n          ({dialogNode.nextNodes.length})\n          </span>\n      {:else}\n        <span title=\"Noeud terminal\">¤</span>\n      {/if}\n      <strong on:click={toggleShowChildNodes}>{dialogNode.character}</strong>:\n      <span  on:click={toggleShowChildNodes} class=\"italic\">\"{t(dialogNode.text)}\"</span>\n\n      <svg on:click={toggleShowSettingsAndChildNodes}>\n        <use href='assets/sprite_icons.svg#edit' />\n      </svg>\n\n      <span class:is-hidden={!multipleIncomingNodes} class=\"is-primary\"\n        title=\"{$nodeIncomingVertices[dialogNode.id]?.length || 0} répliques mène(nt) à ce noeud\">\n        ⇶ {$nodeIncomingVertices[dialogNode.id]?.length || 0} - \n      </span>\n\n      <span title=\"Ajouter une sous-réplique\">\n        <svg on:click={toggleShowNewDialogNode}>\n          <use href='assets/sprite_icons.svg#plus-square' />\n        </svg>\n      </span>\n\n      {#if dialogNode.id !== \"1\"}\n        <span title=\"Supprimer le noeud (irréversible)\">\n          <svg on:click={removeNode} class=\"is-float-right ml-1\">\n            <use href='assets/sprite_icons.svg#times-circle-solid' />\n          </svg>\n        </span>\n      {/if}\n      {#if $nodeIncomingVertices[dialogNode.id]?.length > 0}\n        <span title=\"Supprimer la filiation (le noeud ne sera pas supprimé, seul son lien avec son noeud parent)\">\n          <svg on:click={removeAffiliation} class=\"is-float-right\">\n            <use href='assets/sprite_icons.svg#times-circle-regular' />\n          </svg>\n        </span>\n      {/if}\n    </p>\n\n    {#if showSettings}\n      <DialogNodeSettings bind:dialogNode={dialogNode}/>\n    {/if}\n\n    {#if showNewDialogNode}\n      <NewDialogNode parentDialogNode={dialogNode} on:toggleShowNewDialogNode={toggleShowNewDialogNode}/>\n    {/if}\n  </div>\n\n  <!-- Don't render multi-incoming nodes to avoid node tree bloating.\n   This property is always given at root level and never propagated to avoid\n   child node tree bloating.\n   Nodes having only (max) 1 child are rendered ok\n   -->\n  {#if renderMultiIncomingVerticesNodeChildren ||\n      !$nodeIncomingVertices[dialogNode.id] ||\n      $nodeIncomingVertices[dialogNode.id]?.length <= 1}\n    <ul class:is-hidden={!showChildNodes}>\n      {#each dialogNode.nextNodes as childNodeId, i (i)}\n        <svelte:self {gender} {language} parentNodeId={dialogNode.id}\n        bind:dialogNode={$scene.dialogNodes[childNodeId]}/>\n      {/each}\n    </ul>\n  {/if}\n</li>\n\n<style>\n  div.dialog-node {\n    text-align: left;\n    border: 1px black solid;\n    padding: 0.5em;\n    margin-bottom: 0.75em;\n  }\n  div.dialog-node span,\n  div.dialog-node strong {\n    cursor: pointer;\n  }\n  div.dialog-node p {\n    margin: 0;\n  }\n  .is-player {\n    background-color: #f2f9ff;\n  }\n</style>","<script lang=\"ts\">\n  import DialogNode from \"./DialogNode.svelte\";\n  import { scene } from './stores/scene';\n  import { orphanDialogNodesIds, multipleIncomingNodesIds } from './stores/tree';\n\n  let gender: string = 'm';\n  let language: string = 'fr';\n  let files: FileList; // always a FileList of max. 1 element\n  let filename: string;\n\n  async function loadFile(): Promise<void> {\n    const text = await files[0].text();\n    filename = files[0].name;\n    scene.set(JSON.parse(text));\n  }\n\n  function downloadFile(): void {\n    // Prepare json content\n    const indexLookup: {[k: string]: string} = Object.keys($scene.dialogNodes).reduce((acc, oldIndex, newIndex) => ({...acc, [oldIndex]: String(newIndex + 1)}), {});\n    const output = {\n      metadata: {...$scene.metadata},\n      dialogNodes: {...Object.fromEntries(Object.entries($scene.dialogNodes).map(([key, d], newIndex) => {\n        let newNode = Object.assign({}, d);\n        newNode.nextNodes = newNode.nextNodes.map<string>((oldIndex) => indexLookup[oldIndex]);\n        newNode.id = String(newIndex + 1);\n        return [newIndex + 1, newNode];\n      }))},\n    };\n\n    // Transform JSON into downloadable output\n    const link = document.createElement('a');\n    const blob = new Blob([JSON.stringify(output, null, 2)], {type : 'application/json'});\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n    link.download = filename;\n\n    // Download\n    document.body.appendChild(link);\n    link.click();\n\n    // Cleanup\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n</script>\n\n<main>\n  <h1>Auto-Diagnostique</h1>\n  <h2>Outil d'édition de dialogues</h2>\n\n  <input bind:files\n    on:change={loadFile}\n    accept=\"application/json\"\n    type=\"file\" id=\"scenarioFile\">\n\n  {#if Object.keys($scene.dialogNodes).length > 0}\n    <button id=\"downloadlink\" on:click={downloadFile}>Exporter Scénario</button>\n    <h3>Partie {$scene.metadata.part}: Chapitre {$scene.metadata.chapter}</h3>\n\n    <h4>Noeud Racine:</h4>\n    <ul>\n      <DialogNode {gender} {language}\n      bind:dialogNode={$scene.dialogNodes[\"1\"]}/>\n    </ul>\n  {:else}\n    <p>Veuillez charger un fichier de scénario JSON.</p>\n  {/if}\n\n  {#if $multipleIncomingNodesIds.length > 0}\n    <h4 title=\"Noeuds liés par plusieurs répliques\">Noeud(s) à incidences multiples:</h4>\n    <ul>\n      {#each $multipleIncomingNodesIds as childNodeId, i (i)}\n        <DialogNode {gender} {language} renderMultiIncomingVerticesNodeChildren={true}\n        bind:dialogNode={$scene.dialogNodes[childNodeId]}/>\n      {/each}\n    </ul>\n  {/if}\n\n  {#if $orphanDialogNodesIds.length > 0}\n    <h4 title=\"Noeuds n'étant la réplique d'aucun autre (et n'étant pas le noeud racine)\">Noeud(s) orphelin(s):</h4>\n    <ul>\n      {#each $orphanDialogNodesIds as childNodeId, i (i)}\n        <DialogNode {gender} {language} parentNodeId={'1'}\n        bind:dialogNode={$scene.dialogNodes[childNodeId]}/>\n      {/each}\n    </ul>\n  {/if}\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n  h4 {\n    text-align: left;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n\n  #downloadlink {\n    cursor: pointer;\n  }\n</style>","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","fr","f","character","en","imagePath","attribution","leader","bricoleur","coequipier","planificateur","idealiste","creatif","audacieux","explorateur","showGenderDetails","dialogNode","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","scene","metadata","part","chapter","dialogNodes","dialogNodeList","$scene","dnKey","_a","id","repeat","String","iterations","selectedDialogNodeId","parentDialogNode","newDialogNode","nextNodes","dispatch","includes","toggleChildNodes","newId","reduce","max","Number","nodeIncomingVertices","entries","acc","nextNodeId","orphanDialogNodesIds","$stores","dialogNodeId","multipleIncomingNodesIds","_b","language","gender","parentNodeId","renderMultiIncomingVerticesNodeChildren","showChildNodes","multipleIncomingNodes","terminalNode","showSettings","showNewDialogNode","$nodeIncomingVertices","childNodeId","__awaiter","thisArg","_arguments","P","generator","files","filename","JSON","parse","indexLookup","oldIndex","newIndex","assign","output","fromEntries","newNode","link","blob","Blob","stringify","url","URL","createObjectURL","href","download","body","click","revokeObjectURL"],"mappings":"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"}