{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/DialogNodeSettings.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores/scene.ts","../../src/NewDialogNode.svelte","../../src/DialogNode.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  export let dialogNode: DialogNode;\n  let showGenderDetails: boolean;\n\n  function toggleShowGenderDetails() {\n    if (typeof dialogNode.text.fr === 'object') {\n      dialogNode.text.fr = dialogNode.text.fr.m;\n    } else {\n      dialogNode.text.fr = {\n        m: dialogNode.text.fr,\n        f: dialogNode.text.fr,\n      }\n    }\n  }\n\n  $: showGenderDetails = (typeof dialogNode.text.fr === 'object');\n</script>\n\n<div class=\"properties\" class:background-gray={dialogNode.character !== \"Player\"}>\n  <div class=\"mb-3\">\n    Protagoniste:\n      <select bind:value={dialogNode.character}>\n        <option value=\"Player\">Joueur</option>\n        <option value=\"NPC1\">NPC1</option>\n      </select>\n  </div>\n\n  <div class=\"mb-3\">\n    FR:\n    {#if typeof dialogNode.text.fr === 'string'}\n      <input type=\"text\" bind:value={dialogNode.text.fr}>\n    {/if}\n     <span on:click={toggleShowGenderDetails} class:is-enabled={showGenderDetails}>m|f</span>\n  </div>\n  {#if typeof dialogNode.text.fr === 'object'}\n    <div class=\"details\">\n      <p>\n        m: <input type=\"text\" bind:value={dialogNode.text.fr.m}>\n      </p>\n      <p>\n        f: <input type=\"text\" bind:value={dialogNode.text.fr.f}>\n      </p>\n    </div>\n  {/if}\n\n\n  <div class=\"mb-3\">\n    EN:\n    <input type=\"text\" bind:value={dialogNode.text.en}>\n  </div>\n\n  <div class=\"mb-3\">\n    URL Image:\n      <input type=\"text\" bind:value={dialogNode.imagePath}>\n  </div>\n\n  <div>\n    Attributions:\n    <div class=\"attribution-container\">\n      <div><input type=\"number\" bind:value={dialogNode.attribution.leader}> Leader</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.bricoleur}> Bricoleur</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.coequipier}> Coequipier</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.planificateur}>Planificateur</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.idealiste}> Idealiste</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.creatif}> Creatif</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.audacieux}>Audacieux</div>\n      <div><input type=\"number\" bind:value={dialogNode.attribution.explorateur}> Explorateur</div>\n    </div>\n    <span class=\"is-small is-italic\">chiffres entiers positifs ou négatifs</span>\n  </div>\n</div>\n\n<style>\n  div.properties{\n    margin: 0.5em;\n    padding: 1em;\n    font-family: monospace;\n    font-size: 1.2em;\n  }\n  div.properties.background-gray {\n    background-color: #f6f8fa;\n  }\n  .is-enabled {\n    font-weight: bold;\n    padding-top: 0.25em;\n    border: 1px solid black;\n    border-radius: 0.2em;\n    padding-bottom: 0.25em;\n    padding-left: 0.5em;\n    padding-right: 0.5em;\n  }\n  div.details {\n    margin-left: 1em;\n  }\n  div.details p{\n    margin: 0;\n  }\n  .attribution-container {\n    display: grid;\n    grid-template-columns: auto auto;\n    margin-top: 1em;\n    max-width: 50%;\n  }\n  input[type=\"text\"] {\n    width: 90%;\n    max-width: 50em;\n  }\n  input[type=\"number\"] {\n    width: 3em;\n  }\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// This store represents a loaded scenario (from an external json file)\nimport { writable, derived } from 'svelte/store';\nfunction normalizeId(id) {\n    return `${'0'.repeat(5 - String(id).length)}${id}`;\n}\nconst dummyScene = {\n    metadata: {\n        part: 'I',\n        chapter: '1'\n    },\n    dialogNodes: {}\n};\nexport const scene = writable(dummyScene);\nexport const dialogNodeList = derived(scene, $scene => Object.keys($scene.dialogNodes).map((dnKey) => {\n    var _a;\n    return ({\n        id: dnKey,\n        text: `#${normalizeId(dnKey)} - ${((_a = $scene.dialogNodes[dnKey].text.fr) === null || _a === void 0 ? void 0 : _a.m) || $scene.dialogNodes[dnKey].text.fr}`,\n    });\n}));\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dialogNodeList } from './stores/scene';\n  import DialogNodeSettings from './DialogNodeSettings.svelte';\n  import { scene } from './stores/scene';\n\n  export let parentDialogNode: DialogNode;\n  let selectedDialogNodeId: string;\n  let newDialogNode: DialogNode = {\n    \"id\": \"\",\n    \"text\": {\n      \"fr\": '',\n      \"en\": ''\n    },\n    \"nextNodes\": [],\n    \"character\": \"NPC1\",\n    \"attribution\": {\n      \"leader\": 0,\n      \"bricoleur\": 0,\n      \"coequipier\": 0,\n      \"planificateur\": 0,\n      \"idealiste\": 0,\n      \"creatif\": 0,\n      \"audacieux\": 0,\n      \"explorateur\": 0\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n\n  function addExistingDialogNode() {\n    if (!parentDialogNode.nextNodes.includes(selectedDialogNodeId)) {\n      parentDialogNode.nextNodes = [...parentDialogNode.nextNodes, selectedDialogNodeId];\n    }\n    dispatch('updateNodeLists', {});\n  }\n  function addNewDialogNode() {\n    // Computing first available ID\n    const keys: Array<string> = Object.keys($scene.dialogNodes);\n    let newId = keys.length + 1;\n    while(keys.includes(String(newId))) {\n      newId + 1;\n    }\n    newDialogNode.id = String(newId);\n\n    // Updating parent nextNodes\n    $scene.dialogNodes[String(newId)] = newDialogNode;\n    parentDialogNode.nextNodes = [...parentDialogNode.nextNodes, String(newId)];\n    dispatch('updateNodeLists', {});\n  }\n</script>\n\n<h5>Nouvelle réplique</h5>\n <DialogNodeSettings bind:dialogNode={newDialogNode}/>\n\n<button on:click={addNewDialogNode}>Ajouter</button>\n\n\n<h5>Réplique existante</h5>\n\n<select bind:value={selectedDialogNodeId}>\n  {#each $dialogNodeList as dialogNode}\n    <option value={dialogNode.id}>\n      {dialogNode.text}\n    </option>\n  {/each}\n</select>\n\n<button on:click={addExistingDialogNode}>Ajouter</button>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import DialogNodeSettings from './DialogNodeSettings.svelte';\n  import NewDialogNode from './NewDialogNode.svelte';\n  import { scene } from './stores/scene';\n\n  export let language: string;\n  export let gender: string;\n  export let dialogNode: DialogNode;\n  export let parentNodeId: string = '1';\n  let showChildNodes: boolean = false;\n  let multipleIncomingNodes: boolean = false;\n  let readonly: boolean = false;\n  let showSettings: boolean = false;\n  let showNewDialogNode: boolean = false;\n\n  const t = (text: DialogNode[\"text\"]): string => {\n    return text?.[language]?.[gender] || text?.[language]?.m || text?.[language] || text.fr;\n  }\n\n  const dispatch = createEventDispatcher();\n\n  const normalizedId: string = `${'0'.repeat(5-String(dialogNode.id).length)}${dialogNode.id}`;\n\n  function toggleShowChildNodes() { showChildNodes = !showChildNodes }\n  function toggleShowSettings() { showSettings = !showSettings }\n  function toggleShowNewDialogNode() { showNewDialogNode = !showNewDialogNode}\n\n  function removeAffiliation() {\n    $scene.dialogNodes[parentNodeId].nextNodes = $scene.dialogNodes[parentNodeId].nextNodes.filter((id) => id !== dialogNode.id);\n    dispatch('updateNodeLists', {});\n  }\n\n  function removeNode() {\n    // Remove references\n    Object.keys($scene.dialogNodes).forEach((dialogNodeId) => {\n      $scene.dialogNodes[dialogNodeId].nextNodes = $scene.dialogNodes[dialogNodeId].nextNodes.filter((id) => id !== dialogNode.id);\n    });\n\n    delete $scene.dialogNodes[dialogNode.id];\n    dispatch('updateNodeLists', {});\n  }\n\n  $: multipleIncomingNodes = (dialogNode?.incomingNodes?.length > 1 ) || false;\n  $: readonly = dialogNode?.incomingNodes?.length > 1;\n</script>\n\n<li id=\"{normalizedId}\">\n  <div class=\"dialog-node\" class:is-player={dialogNode.character === \"Player\"}>\n    <p>\n      {#if !readonly}\n\n        <svg on:click={toggleShowChildNodes} class:is-hidden={showChildNodes}>\n          <use href='assets/sprite_icons.svg#angle-double-right' />\n        </svg>\n        <svg on:click={toggleShowChildNodes} class:is-hidden={!showChildNodes}>\n          <use href='assets/sprite_icons.svg#angle-double-down' />\n        </svg>\n        <span class=\"is-primary\"\n          title=\"Ce noeud mène à {dialogNode.nextNodes.length} réplique(s)\"\n          on:click={toggleShowChildNodes}>\n          ({dialogNode.nextNodes.length})\n          </span>\n      {:else}\n        <span title=\"Noeud terminal\">¤</span>\n      {/if}\n      <strong on:click={toggleShowChildNodes}>{dialogNode.character}</strong>:\n      <span  on:click={toggleShowChildNodes} class=\"italic\">\"{t(dialogNode.text)}\"</span>\n\n      <svg on:click={toggleShowSettings}>\n        <use href='assets/sprite_icons.svg#edit' />\n      </svg>\n\n      <span class:is-hidden={!multipleIncomingNodes} class=\"is-primary\"\n        title=\"{dialogNode.incomingNodes?.length || 0} répliques mène(nt) à ce noeud\">\n        ⇶ {dialogNode.incomingNodes?.length || 0} - \n      </span>\n\n      <span title=\"Ajouter une sous-réplique\">\n        <svg on:click={toggleShowNewDialogNode}>\n          <use href='assets/sprite_icons.svg#plus-square' />\n        </svg>\n      </span>\n\n      {#if dialogNode.id !== \"1\"}\n        <span title=\"Supprimer le noeud (irréversible)\">\n          <svg on:click={removeNode} class=\"is-float-right ml-1\">\n            <use href='assets/sprite_icons.svg#times-circle-solid' />\n          </svg>\n        </span>\n      {/if}\n      {#if dialogNode.incomingNodes.length > 0}\n        <span title=\"Supprimer la filiation (le noeud ne sera pas supprimé, seul son lien avec son noeud parent)\">\n          <svg on:click={removeAffiliation} class=\"is-float-right\">\n            <use href='assets/sprite_icons.svg#times-circle-regular' />\n          </svg>\n        </span>\n      {/if}\n    </p>\n\n    {#if showSettings}\n      <DialogNodeSettings bind:dialogNode={dialogNode}/>\n    {/if}\n\n    {#if showNewDialogNode}\n      <NewDialogNode parentDialogNode={dialogNode} on:updateNodeLists/>\n    {/if}\n  </div>\n\n  <ul class:is-hidden={!showChildNodes}>\n    {#each dialogNode.nextNodes as childNodeId, i (i)}\n      <svelte:self {gender} {language} parentNodeId={dialogNode.id}\n      bind:dialogNode={$scene.dialogNodes[childNodeId]}\n      on:updateNodeLists/>\n    {/each}\n  </ul>\n</li>\n\n<style>\n  div.dialog-node {\n    text-align: left;\n    border: 1px black solid;\n    padding: 0.5em;\n    margin-bottom: 0.75em;\n  }\n  div.dialog-node span,\n  div.dialog-node strong {\n    cursor: pointer;\n  }\n  div.dialog-node p {\n    margin: 0;\n  }\n  .is-player {\n    background-color: #f2f9ff;\n  }\n</style>","<script lang=\"ts\">\n  import DialogNode from \"./DialogNode.svelte\";\n  import { scene } from './stores/scene';\n\n  export let gender: string;\n  export let language: string;\n  let files: FileList; // always a FileList of max. 1 element\n  let filename: string;\n  let orphanDialogNodesIds: Array<string> = [];\n  let multipleIncomingNodesIds: Array<string> = [];\n\n  /* Browse all nodes and infer incoming vertices */\n  function inferIncomingVertices(): void {\n    // Reset\n    Object.entries($scene.dialogNodes).forEach(([_, dialogNode]) => {\n      dialogNode.incomingNodes = [];\n    });\n\n    // Recompute\n    Object.entries($scene.dialogNodes).forEach(([id, dialogNode]) => {\n      dialogNode.nextNodes.forEach((nextNodeId) => {\n        $scene.dialogNodes[nextNodeId].incomingNodes = [...($scene.dialogNodes[nextNodeId].incomingNodes || []), id];\n      });\n    });\n  }\n  function findOrphanDialogNodesIds(): Array<string> {\n    return Object.keys($scene.dialogNodes).reduce((acc, dialogNodeId) => (\n      $scene.dialogNodes[dialogNodeId]?.incomingNodes?.length === 0\n      && dialogNodeId !== \"1\" ? [ ...acc, dialogNodeId] : acc\n    ), []);\n  }\n\n  function findMultipleIncomingNodesIds(): Array<string> {\n    return Object.keys($scene.dialogNodes).reduce((acc, dialogNodeId) => (\n      $scene.dialogNodes[dialogNodeId]?.incomingNodes?.length > 1 ? [ ...acc, dialogNodeId] : acc\n    ), []);\n  }\n\n  function updateNodeLists(): void {\n    inferIncomingVertices();\n    orphanDialogNodesIds = findOrphanDialogNodesIds();\n    multipleIncomingNodesIds = findMultipleIncomingNodesIds();\n  }\n\n  async function loadFile(): Promise<void> {\n    const text = await files[0].text();\n    filename = files[0].name;\n    scene.set(JSON.parse(text));\n\n    updateNodeLists();\n  }\n\n  function downloadFile(): void {\n    const link = document.createElement('a');\n    const blob = new Blob([JSON.stringify($scene, null, 2)], {type : 'application/json'});\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n    link.download = filename;\n\n    // Download\n    document.body.appendChild(link);\n    link.click();\n\n    // Cleanup\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n</script>\n\n<main>\n  <h1>Auto-Diagnostique</h1>\n  <h2>Outil d'édition de dialogues</h2>\n\n  <input bind:files\n    on:change={loadFile}\n    accept=\"application/json\"\n    type=\"file\" id=\"scenarioFile\">\n\n  {#if Object.keys($scene.dialogNodes).length > 0}\n\n    <a id=\"downloadLink\" on:click={downloadFile}>Exporter Scénario</a>\n    <h3>Partie {$scene.metadata.part}: Chapitre {$scene.metadata.chapter}</h3>\n\n    <h4>Noeud Racine:</h4>\n    <ul>\n      <DialogNode {gender} {language}\n      bind:dialogNode={$scene.dialogNodes[\"1\"]}\n      on:updateNodeLists={updateNodeLists}/>\n    </ul>\n\n    {#if multipleIncomingNodesIds.length > 0}\n      <h4 title=\"Noeuds liés par plusieurs répliques\">Noeud(s) à incidences multiples:</h4>\n      <ul>\n        {#each multipleIncomingNodesIds as childNodeId, i (i)}\n          <DialogNode {gender} {language}\n          bind:dialogNode={$scene.dialogNodes[childNodeId]}\n          on:updateNodeLists={updateNodeLists}/>\n        {/each}\n      </ul>\n    {/if}\n\n    {#if orphanDialogNodesIds.length > 0}\n      <h4 title=\"Noeuds n'étant la réplique d'aucun autre (et n'étant pas le noeud racine)\">Noeud(s) orphelin(s):</h4>\n      <ul>\n        {#each orphanDialogNodesIds as childNodeId, i (i)}\n          <DialogNode {gender} {language} parentNodeId={'1'}\n          bind:dialogNode={$scene.dialogNodes[childNodeId]}\n          on:updateNodeLists={updateNodeLists}/>\n        {/each}\n      </ul>\n    {/if}\n  {:else}\n    <p>Veuillez charger un fichier de scénario JSON.</p>\n  {/if}\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n  h4 {\n    text-align: left;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        language: 'fr',\n        gender: 'm',\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","fr","f","character","en","imagePath","attribution","leader","bricoleur","coequipier","planificateur","idealiste","creatif","audacieux","explorateur","showGenderDetails","dialogNode","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","scene","metadata","part","chapter","dialogNodes","dialogNodeList","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$scene","dnKey","_a","id","repeat","String","iterations","selectedDialogNodeId","parentDialogNode","newDialogNode","nextNodes","dispatch","includes","newId","incomingNodes","_b","language","gender","parentNodeId","showChildNodes","multipleIncomingNodes","readonly","showSettings","showNewDialogNode","normalizedId","dialogNodeId","childNodeId","__awaiter","thisArg","_arguments","P","generator","files","filename","orphanDialogNodesIds","multipleIncomingNodesIds","updateNodeLists","entries","_","nextNodeId","reduce","acc","JSON","parse","link","blob","Blob","stringify","url","URL","createObjectURL","href","download","body","click","revokeObjectURL"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAahF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOf,EAEX,MAAMiB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IA+ElD,SAASI,EAAgBV,EAAOW,EAAKC,EAAQD,GAEzC,OADAX,EAAMa,IAAID,GACHD,EAuDX,SAASG,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOnB,EAAMoB,EAAOC,EAASC,GAElC,OADAtB,EAAKuB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMtB,EAAKwB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKzB,EAAM0B,EAAW9B,GACd,MAATA,EACAI,EAAK2B,gBAAgBD,GAChB1B,EAAK4B,aAAaF,KAAe9B,GACtCI,EAAK6B,aAAaH,EAAW9B,GAkDrC,SAASkC,EAAUlC,GACf,MAAiB,KAAVA,EAAe,MAAQA,EA6ClC,SAASmC,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKkB,YAAcjB,IACnBD,EAAKC,KAAOA,GAEpB,SAASkB,EAAgBC,EAAOtC,GAC5BsC,EAAMtC,MAAiB,MAATA,EAAgB,GAAKA,EAavC,SAASuC,EAAcC,EAAQxC,GAC3B,IAAK,IAAIyC,EAAI,EAAGA,EAAID,EAAOd,QAAQgB,OAAQD,GAAK,EAAG,CAC/C,MAAME,EAASH,EAAOd,QAAQe,GAC9B,GAAIE,EAAOC,UAAY5C,EAEnB,YADA2C,EAAOE,UAAW,IAW9B,SAASC,EAAaN,GAClB,MAAMO,EAAkBP,EAAOQ,cAAc,aAAeR,EAAOd,QAAQ,GAC3E,OAAOqB,GAAmBA,EAAgBH,QA0D9C,SAASK,EAAarC,EAASC,EAAMqC,GACjCtC,EAAQuC,UAAUD,EAAS,MAAQ,UAAUrC,GA0LjD,IAAIuC,EACJ,SAASC,EAAsB5D,GAC3B2D,EAAoB3D,EAmBxB,SAAS6D,IACL,MAAM7D,EAlBV,WACI,IAAK2D,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EAeWI,GAClB,MAAO,CAACC,EAAMC,KACV,MAAMrE,EAAYI,EAAUE,GAAGN,UAAUoE,GACzC,GAAIpE,EAAW,CAGX,MAAMmC,EApNlB,SAAsBiC,EAAMC,GACxB,MAAMC,EAAI7C,SAAS8C,YAAY,eAE/B,OADAD,EAAEE,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BC,EAiNeG,CAAaL,EAAMC,GACjCrE,EAAU0E,QAAQlF,SAAQN,IACtBA,EAAGyF,KAAKvE,EAAW+B,QAiBnC,SAASyC,EAAOxE,EAAW+B,GACvB,MAAMnC,EAAYI,EAAUE,GAAGN,UAAUmC,EAAMiC,MAC3CpE,GACAA,EAAU0E,QAAQlF,SAAQN,GAAMA,EAAGiD,KAI3C,MAAM0C,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBnG,GACzB6F,EAAiBvE,KAAKtB,GAE1B,SAASoG,EAAmBpG,GACxB8F,EAAgBxE,KAAKtB,GAEzB,IAAIqG,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAInC,EAAI,EAAGA,EAAIyB,EAAiBxB,OAAQD,GAAK,EAAG,CACjD,MAAMhD,EAAYyE,EAAiBzB,GACnCY,EAAsB5D,GACtBuF,EAAOvF,EAAUE,IAIrB,IAFA0D,EAAsB,MACtBa,EAAiBxB,OAAS,EACnByB,EAAkBzB,QACrByB,EAAkBc,KAAlBd,GAIJ,IAAK,IAAI1B,EAAI,EAAGA,EAAI2B,EAAiB1B,OAAQD,GAAK,EAAG,CACjD,MAAM/C,EAAW0E,EAAiB3B,GAC7BoC,EAAeK,IAAIxF,KAEpBmF,EAAeM,IAAIzF,GACnBA,KAGR0E,EAAiB1B,OAAS,QACrBwB,EAAiBxB,QAC1B,KAAO2B,EAAgB3B,QACnB2B,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeO,SAEnB,SAASJ,EAAOrF,GACZ,GAAoB,OAAhBA,EAAG0F,SAAmB,CACtB1F,EAAGqF,SACHrG,EAAQgB,EAAG2F,eACX,MAAMC,EAAQ5F,EAAG4F,MACjB5F,EAAG4F,MAAQ,EAAE,GACb5F,EAAG0F,UAAY1F,EAAG0F,SAASG,EAAE7F,EAAG8F,IAAKF,GACrC5F,EAAG+F,aAAa7G,QAAQ6F,IAiBhC,MAAMiB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRnH,EAAQiH,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMzD,IACfkD,EAASS,OAAOF,GAChBA,EAAMzD,EAAE0D,IAGhB,SAASE,EAAeH,EAAOC,EAAO1F,EAAQf,GAC1C,GAAIwG,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAElG,MAAK,KACV8F,EAASS,OAAOF,GACZxG,IACIe,GACAyF,EAAMK,EAAE,GACZ7G,QAGRwG,EAAMI,EAAEH,IAgUhB,SAASK,EAAwBN,EAAOO,GACpCJ,EAAeH,EAAO,EAAG,GAAG,KACxBO,EAAOL,OAAOF,EAAMQ,QAW5B,SAASC,EAAkBC,EAAYrB,EAAOsB,EAASC,EAASrB,EAAKsB,EAAMN,EAAQrG,EAAM4G,EAASC,EAAmBC,EAAMC,GACvH,IAAIb,EAAIM,EAAWlE,OACf0E,EAAIL,EAAKrE,OACTD,EAAI6D,EACR,MAAMe,EAAc,GACpB,KAAO5E,KACH4E,EAAYT,EAAWnE,GAAGiE,KAAOjE,EACrC,MAAM6E,EAAa,GACbC,EAAa,IAAIC,IACjBC,EAAS,IAAID,IAEnB,IADA/E,EAAI2E,EACG3E,KAAK,CACR,MAAMiF,EAAYP,EAAY1B,EAAKsB,EAAMtE,GACnCiE,EAAMG,EAAQa,GACpB,IAAIxB,EAAQO,EAAOkB,IAAIjB,GAClBR,EAIIY,GACLZ,EAAMV,EAAEkC,EAAWnC,IAJnBW,EAAQe,EAAkBP,EAAKgB,GAC/BxB,EAAMH,KAKVwB,EAAWtH,IAAIyG,EAAKY,EAAW7E,GAAKyD,GAChCQ,KAAOW,GACPI,EAAOxH,IAAIyG,EAAKkB,KAAKC,IAAIpF,EAAI4E,EAAYX,KAEjD,MAAMoB,EAAY,IAAIhD,IAChBiD,EAAW,IAAIjD,IACrB,SAASxE,EAAO4F,GACZD,EAAcC,EAAO,GACrBA,EAAM8B,EAAE5H,EAAM8G,GACdT,EAAOxG,IAAIiG,EAAMQ,IAAKR,GACtBgB,EAAOhB,EAAM+B,MACbb,IAEJ,KAAOd,GAAKc,GAAG,CACX,MAAMc,EAAYZ,EAAWF,EAAI,GAC3Be,EAAYvB,EAAWN,EAAI,GAC3B8B,EAAUF,EAAUxB,IACpB2B,EAAUF,EAAUzB,IACtBwB,IAAcC,GAEdjB,EAAOgB,EAAUD,MACjB3B,IACAc,KAEMG,EAAWrC,IAAImD,IAKf5B,EAAOvB,IAAIkD,IAAYN,EAAU5C,IAAIkD,GAC3C9H,EAAO4H,GAEFH,EAAS7C,IAAImD,GAClB/B,IAEKmB,EAAOE,IAAIS,GAAWX,EAAOE,IAAIU,IACtCN,EAAS5C,IAAIiD,GACb9H,EAAO4H,KAGPJ,EAAU3C,IAAIkD,GACd/B,MAfAU,EAAQmB,EAAW1B,GACnBH,KAiBR,KAAOA,KAAK,CACR,MAAM6B,EAAYvB,EAAWN,GACxBiB,EAAWrC,IAAIiD,EAAUzB,MAC1BM,EAAQmB,EAAW1B,GAE3B,KAAOW,GACH9G,EAAOgH,EAAWF,EAAI,IAC1B,OAAOE,EA0LX,SAASgB,EAAK7I,EAAWoB,EAAMnB,GAC3B,MAAM6I,EAAQ9I,EAAUE,GAAG6I,MAAM3H,QACnB4H,IAAVF,IACA9I,EAAUE,GAAG+I,MAAMH,GAAS7I,EAC5BA,EAASD,EAAUE,GAAG8F,IAAI8C,KAGlC,SAASI,EAAiBzC,GACtBA,GAASA,EAAMH,IAKnB,SAAS6C,EAAgBnJ,EAAWU,EAAQI,EAAQsI,GAChD,MAAMxD,SAAEA,EAAQyD,SAAEA,EAAQlJ,WAAEA,EAAU8F,aAAEA,GAAiBjG,EAAUE,GACnE0F,GAAYA,EAAS2C,EAAE7H,EAAQI,GAC1BsI,GAEDnE,GAAoB,KAChB,MAAMqE,EAAiBD,EAASE,IAAI1K,GAAK2K,OAAOnK,GAC5Cc,EACAA,EAAWC,QAAQkJ,GAKnBpK,EAAQoK,GAEZtJ,EAAUE,GAAGmJ,SAAW,MAGhCpD,EAAa7G,QAAQ6F,GAEzB,SAASwE,EAAkBzJ,EAAW0J,GAClC,MAAMxJ,EAAKF,EAAUE,GACD,OAAhBA,EAAG0F,WACH1G,EAAQgB,EAAGC,YACXD,EAAG0F,UAAY1F,EAAG0F,SAASkB,EAAE4C,GAG7BxJ,EAAGC,WAAaD,EAAG0F,SAAW,KAC9B1F,EAAG8F,IAAM,IAGjB,SAAS2D,EAAW3J,EAAWgD,IACI,IAA3BhD,EAAUE,GAAG4F,MAAM,KACnBrB,EAAiBrE,KAAKJ,GA7uBrBgF,IACDA,GAAmB,EACnBH,EAAiB+E,KAAKtE,IA6uBtBtF,EAAUE,GAAG4F,MAAM+D,KAAK,IAE5B7J,EAAUE,GAAG4F,MAAO9C,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS8G,GAAK9J,EAAWiC,EAAS8H,EAAUC,EAAiBC,EAAWlB,EAAOjD,EAAQ,EAAE,IACrF,MAAMoE,EAAmBvG,EACzBC,EAAsB5D,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtB0F,SAAU,KACVI,IAAK,KAEL+C,MAAAA,EACAxD,OAAQ3G,EACRqL,UAAAA,EACAhB,MAAOlK,IAEPsK,SAAU,GACVlJ,WAAY,GACZgK,cAAe,GACftE,cAAe,GACfI,aAAc,GACdmE,QAAS,IAAIrC,IAAImC,EAAmBA,EAAiBhK,GAAGkK,QAAUnI,EAAQmI,SAAW,IAErFxK,UAAWb,IACX+G,MAAAA,EACAuE,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBApK,EAAG8F,IAAM+D,EACHA,EAAS/J,EAAWiC,EAAQ8G,OAAS,IAAI,CAAC/F,EAAG1C,KAAQiK,KACnD,MAAMhK,EAAQgK,EAAKtH,OAASsH,EAAK,GAAKjK,EAOtC,OANIJ,EAAG8F,KAAOiE,EAAU/J,EAAG8F,IAAIhD,GAAI9C,EAAG8F,IAAIhD,GAAKzC,MACtCL,EAAGmK,YAAcnK,EAAG+I,MAAMjG,IAC3B9C,EAAG+I,MAAMjG,GAAGzC,GACZ+J,GACAX,EAAW3J,EAAWgD,IAEvB1C,KAET,GACNJ,EAAGqF,SACH+E,GAAQ,EACRpL,EAAQgB,EAAG2F,eAEX3F,EAAG0F,WAAWoE,GAAkBA,EAAgB9J,EAAG8F,KAC/C/D,EAAQvB,OAAQ,CAChB,GAAIuB,EAAQuI,QAAS,CACjB,MAAMC,EAzpClB,SAAkBtJ,GACd,OAAOuJ,MAAMC,KAAKxJ,EAAQyJ,YAwpCJC,CAAS5I,EAAQvB,QAE/BR,EAAG0F,UAAY1F,EAAG0F,SAASkF,EAAEL,GAC7BA,EAAMrL,QAAQ4B,QAIdd,EAAG0F,UAAY1F,EAAG0F,SAASU,IAE3BrE,EAAQ8I,OACRvE,EAAcxG,EAAUE,GAAG0F,UAC/BuD,EAAgBnJ,EAAWiC,EAAQvB,OAAQuB,EAAQnB,OAAQmB,EAAQmH,eACnE9D,IAEJ1B,EAAsBsG,GAkD1B,MAAMc,GACFC,WACIxB,EAAkByB,KAAM,GACxBA,KAAKC,SAAWvM,EAEpBqM,IAAIjH,EAAM/D,GACN,MAAML,EAAasL,KAAKhL,GAAGN,UAAUoE,KAAUkH,KAAKhL,GAAGN,UAAUoE,GAAQ,IAEzE,OADApE,EAAUQ,KAAKH,GACR,KACH,MAAM6I,EAAQlJ,EAAUwL,QAAQnL,IACjB,IAAX6I,GACAlJ,EAAUyL,OAAOvC,EAAO,IAGpCmC,KAAKK,GA1gDT,IAAkBC,EA2gDNL,KAAKM,QA3gDCD,EA2gDkBD,EA1gDG,IAA5BtM,OAAOyM,KAAKF,GAAKtI,UA2gDhBiI,KAAKhL,GAAGmK,YAAa,EACrBa,KAAKM,MAAMF,GACXJ,KAAKhL,GAAGmK,YAAa,0HClhDIrE,KAAWvE,KAAKiK,yDAAhB1F,KAAWvE,KAAKiK,QAAhB1F,KAAWvE,KAAKiK,2YAOX1F,KAAWvE,KAAKiK,GAAGnD,mCAGnBvC,KAAWvE,KAAKiK,GAAGC,4EAHnB3F,KAAWvE,KAAKiK,GAAGnD,OAAnBvC,KAAWvE,KAAKiK,GAAGnD,kBAGnBvC,KAAWvE,KAAKiK,GAAGC,OAAnB3F,KAAWvE,KAAKiK,GAAGC,8LAXtB,iBAAvB3F,KAAWvE,KAAKiK,aAKK,iBAAvB1F,KAAWvE,KAAKiK,u8BAbJ1F,KAAW4F,mGAW2B5F,8sBAdQ,WAAzBA,KAAW4F,mEAGhC5F,KAAW4F,uHA2BF5F,KAAWvE,KAAKoK,oCAKd7F,KAAW8F,yDAMJ9F,KAAW+F,YAAYC,wCACvBhG,KAAW+F,YAAYE,2CACvBjG,KAAW+F,YAAYG,4CACvBlG,KAAW+F,YAAYI,qDACvBnG,KAAW+F,YAAYK,kDACvBpG,KAAW+F,YAAYM,gDACvBrG,KAAW+F,YAAYO,kDACvBtG,KAAW+F,YAAYQ,8EAlC9CvG,gOAXKA,KAAW4F,WAQE,iBAAvB5F,KAAWvE,KAAKiK,wFAGgC1F,MAE3B,iBAAvBA,KAAWvE,KAAKiK,iFAcK1F,KAAWvE,KAAKoK,QAAhB7F,KAAWvE,KAAKoK,mBAKd7F,KAAW8F,eAAX9F,KAAW8F,6BAMJ9F,KAAW+F,YAAYC,YAAvBhG,KAAW+F,YAAYC,0BACvBhG,KAAW+F,YAAYE,eAAvBjG,KAAW+F,YAAYE,6BACvBjG,KAAW+F,YAAYG,gBAAvBlG,KAAW+F,YAAYG,8BACvBlG,KAAW+F,YAAYI,mBAAvBnG,KAAW+F,YAAYI,kCACvBnG,KAAW+F,YAAYK,gBAAvBpG,KAAW+F,YAAYK,8BACvBpG,KAAW+F,YAAYM,cAAvBrG,KAAW+F,YAAYM,4BACvBrG,KAAW+F,YAAYO,gBAAvBtG,KAAW+F,YAAYO,8BACvBtG,KAAW+F,YAAYQ,kBAAvBvG,KAAW+F,YAAYQ,wCAhDK,WAAzBvG,KAAW4F,4FAhBpDY,cADOC,kGAcRD,EAAmD,iBAAvBC,EAAWhL,KAAKiK,qBAVX,iBAAvBe,EAAWhL,KAAKiK,OACzBe,EAAWhL,KAAKiK,GAAKe,EAAWhL,KAAKiK,GAAGnD,SAExCkE,EAAWhL,KAAKiK,IACdnD,EAAGkE,EAAWhL,KAAKiK,GACnBC,EAAGc,EAAWhL,KAAKiK,mBAWDe,EAAWb,qCASAa,EAAWhL,KAAKiK,iCAOXe,EAAWhL,KAAKiK,GAAGnD,gCAGnBkE,EAAWhL,KAAKiK,GAAGC,gCAQ1Bc,EAAWhL,KAAKoK,iCAKdY,EAAWX,wCAMJW,EAAWV,YAAYC,wCACvBS,EAAWV,YAAYE,2CACvBQ,EAAWV,YAAYG,4CACvBO,EAAWV,YAAYI,+CACvBM,EAAWV,YAAYK,2CACvBK,EAAWV,YAAYM,yCACvBI,EAAWV,YAAYO,2CACvBG,EAAWV,YAAYQ,iHC/DnE,MAAMG,GAAmB,GAgBzB,SAASC,GAASpM,EAAOqM,EAAQhO,GAC7B,IAAIiO,EACJ,MAAMC,EAAc,GACpB,SAAStM,EAAIuM,GACT,GAAIxN,EAAegB,EAAOwM,KACtBxM,EAAQwM,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBzJ,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAI8J,EAAY7J,OAAQD,GAAK,EAAG,CAC5C,MAAMiK,EAAIH,EAAY9J,GACtBiK,EAAE,KACFP,GAAiBtM,KAAK6M,EAAG1M,GAE7B,GAAIyM,EAAW,CACX,IAAK,IAAIhK,EAAI,EAAGA,EAAI0J,GAAiBzJ,OAAQD,GAAK,EAC9C0J,GAAiB1J,GAAG,GAAG0J,GAAiB1J,EAAI,IAEhD0J,GAAiBzJ,OAAS,IA0B1C,MAAO,CAAEzC,IAAAA,EAAK+E,OArBd,SAAgBzG,GACZ0B,EAAI1B,EAAGyB,KAoBWb,UAlBtB,SAAmBb,EAAKqO,EAAatO,GACjC,MAAMuO,EAAa,CAACtO,EAAKqO,GAMzB,OALAJ,EAAY1M,KAAK+M,GACU,IAAvBL,EAAY7J,SACZ4J,EAAOD,EAAMpM,IAAQ5B,GAEzBC,EAAI0B,GACG,KACH,MAAMuI,EAAQgE,EAAY1B,QAAQ+B,IACnB,IAAXrE,GACAgE,EAAYzB,OAAOvC,EAAO,GAEH,IAAvBgE,EAAY7J,SACZ4J,IACAA,EAAO,SCrDvB,MAOaO,GAAQT,GAPF,CACfU,SAAU,CACNC,KAAM,IACNC,QAAS,KAEbC,YAAa,KAGJC,GDmDb,SAAiBC,EAAQ5O,EAAI6O,GACzB,MAAMC,GAAUlD,MAAMmD,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOjP,EAAGmE,OAAS,EACzB,MA5DO,CACHvD,UAAWiN,GA2DCgB,GAAgBnN,IAC5B,IAAIwN,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAUvP,EACd,MAAMwP,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAME,EAASvP,EAAG8O,EAASK,EAAO,GAAKA,EAAQzN,GAC3CuN,EACAvN,EAAI6N,GAGJF,EAAU9O,EAAYgP,GAAUA,EAASzP,GAG3C0P,EAAgBR,EAAavE,KAAI,CAAC5J,EAAOqD,IAAMtD,EAAUC,GAAQY,IACnE0N,EAAOjL,GAAKzC,EACZ2N,KAAa,GAAKlL,GACdgL,GACAI,OAEL,KACCF,GAAY,GAAKlL,OAIrB,OAFAgL,GAAS,EACTI,IACO,WACHlP,EAAQoP,GACRH,QA1F8BzO,WCEZ6O,CAAQnB,IAAOoB,GAAUxP,OAAOyM,KAAK+C,EAAOhB,aAAajE,KAAKkF,IACxF,IAAIC,EAZaC,EAajB,OACIA,GAAIF,EACJhN,KAAM,IAfOkN,EAeSF,EAdnB,GAAG,IAAIG,OAAO,EAAIC,OAAOF,GAAI1L,UAAU0L,UAcsC,QAA5CD,EAAKF,EAAOhB,YAAYiB,GAAOhN,KAAKiK,UAAuB,IAAPgD,OAAgB,EAASA,EAAGnG,IAAMiG,EAAOhB,YAAYiB,GAAOhN,KAAKiK,iGC8C1J1F,MAAWvE,0DADCuE,MAAW2I,wEACvB3I,MAAWvE,6BADCuE,MAAW2I,8IATQ3I,oBAAAA,kEAQ7BA,0BAAL/C,0TADgB+C,oKAAAA,gDALFA,qCAaAA,iEAfoBA,+CAQ7BA,aAAL/C,+HAAAA,gBADgB+C,oJJ4IpB,SAAsB8I,EAAYpF,GAC9B,IAAK,IAAI1G,EAAI,EAAGA,EAAI8L,EAAW7L,OAAQD,GAAK,EACpC8L,EAAW9L,IACX8L,EAAW9L,GAAG8D,EAAE4C,gHIpMtBqF,oBADOC,KAEPC,GACFN,GAAM,GACNlN,MACEiK,GAAM,GACNG,GAAM,IAERqD,aACAtD,UAAa,OACbG,aACEC,OAAU,EACVC,UAAa,EACbC,WAAc,EACdC,cAAiB,EACjBC,UAAa,EACbC,QAAW,EACXC,UAAa,EACbC,YAAe,UAIb4C,EAAWtL,4FAGVmL,EAAiBE,UAAUE,SAASL,QACvCC,EAAiBE,cAAgBF,EAAiBE,UAAWH,MAE/DI,EAAS,wCAIH1D,EAAsBzM,OAAOyM,KAAK+C,EAAOhB,iBAC3C6B,EAAQ5D,EAAKxI,OAAS,OACpBwI,EAAK2D,SAASP,OAAOQ,UAG3BJ,EAAcN,GAAKE,OAAOQ,WAG1Bb,EAAOhB,YAAYqB,OAAOQ,IAAUJ,SACpCD,EAAiBE,cAAgBF,EAAiBE,UAAWL,OAAOQ,OACpEF,EAAS,qCAKyBF,uBAOlBF,6XCCR/I,KAAWkJ,UAAUjM,2LAT6B+C,+EAGCA,+EAI7BA,KAAWkJ,UAAUjM,kIAPhC+C,mBAGAA,mBAKHA,2CAR0CA,4BAGCA,kBAMnDA,KAAWkJ,UAAUjM,kDAFC+C,KAAWkJ,UAAUjM,sYA2B9B+C,sYAOAA,mHAQkBA,oBAAAA,uJAAAA,8KAIJA,+HAAAA,wMAMcA,KAAW2I,oBACzC3I,KAAOwH,YAAYxH,sBAAnBA,KAAOwH,YAAYxH,8QADWA,KAAW2I,kCACzC3I,KAAOwH,YAAYxH,+MA9CKA,KAAW4F,eACI5F,KAAEA,KAAWvE,aAQhEuE,KAAWsJ,eAAerM,QAAU,+CAzBnC+C,oCAkCiB,MAAlBA,KAAW2I,aAOX3I,KAAWsJ,cAAcrM,OAAS,YASpC+C,eAIAA,eAMEA,KAAWkJ,sBAA6BlJ,uBAA7C/C,+kBApCU+C,KAAWsJ,eAAerM,QAAU,sDADtB+C,oNAzBuC,WAAzBA,KAAW4F,4BA6D/B5F,eA9DfA,kXAmBeA,mBACDA,mBAEFA,mBAUEA,kHAbwBA,KAAW4F,wCACI5F,KAAEA,KAAWvE,uCAQhEuE,KAAWsJ,eAAerM,QAAU,kCAD/B+C,KAAWsJ,eAAerM,QAAU,6EADtB+C,MAWD,MAAlBA,KAAW2I,kEAOX3I,KAAWsJ,cAAcrM,OAAS,oEASpC+C,8GAIAA,uIAxD4D,WAAzBA,KAAW4F,sBA8D5C5F,KAAWkJ,gFADElJ,gDAClB/C,yOA9GWyL,EAAAa,qCAMJC,aACAC,iBACAhD,mBACAiD,EAAuB,OAC9BC,GAA0B,EAC1BC,GAAiC,EACjCC,GAAoB,EACpBC,GAAwB,EACxBC,GAA6B,QAM3BZ,EAAWtL,IAEXmM,SAA8BpB,OAAO,EAAEC,OAAOpC,EAAWkC,IAAI1L,UAAUwJ,EAAWkC,kNAqBrFiB,GAAkD,YAAzBlB,EAAAjC,MAAAA,SAAAA,EAAY6C,yBAAaZ,SAAAA,EAAEzL,QAAS,IAAO,0BACpE4M,GAAoC,YAAzBN,EAAA9C,MAAAA,SAAAA,EAAY6C,yBAAaC,SAAAA,EAAEtM,QAAS,uBA5BvCxB,mBACc,QAAhBiN,EAAAjN,MAAAA,SAAAA,EAAO+N,cAASd,SAAAA,EAAGe,MAA2B,QAAhBF,EAAA9N,MAAAA,SAAAA,EAAO+N,cAASD,SAAAA,EAAEhH,KAAK9G,MAAAA,SAAAA,EAAO+N,KAAa/N,EAAKiK,qBAOrDiE,GAAkBA,mBACpBG,GAAgBA,mBACXC,GAAqBA,oBAGxDvB,EAAOhB,YAAYkC,GAAcR,UAAYV,EAAOhB,YAAYkC,GAAcR,UAAU1F,QAAQmF,GAAOA,IAAOlC,EAAWkC,QACzHQ,EAAS,kCAKTnQ,OAAOyM,KAAK+C,EAAOhB,aAAapO,SAAS6Q,SACvCzB,EAAOhB,YAAYyC,GAAcf,UAAYV,EAAOhB,YAAYyC,GAAcf,UAAU1F,QAAQmF,GAAOA,IAAOlC,EAAWkC,kBAGpHH,EAAOhB,YAAYf,EAAWkC,IACrCQ,EAAS,yCA6D8B1C,6DAWpB+B,EAAOhB,YAAY0C,QAAnB1B,EAAOhB,YAAY0C,yfC9B1BlK,KAAOqH,SAASC,UAAiBtH,KAAOqH,SAASE,6EAK1CvH,KAAOwH,YAAY,kBAAnBxH,KAAOwH,YAAY,kFAChBxH,YAGjBA,KAAyB/C,OAAS,WAWlC+C,KAAqB/C,OAAS,keArBJ+C,uCACnBA,KAAOqH,SAASC,oCAAiBtH,KAAOqH,SAASE,wGAK1CvH,KAAOwH,YAAY,4BAIjCxH,KAAyB/C,OAAS,4GAWlC+C,KAAqB/C,OAAS,sWARxB+C,gBAA4CA,sBAAjD/C,2WAAK+C,6EAAL/C,0PAEiB+C,KAAOwH,YAAYxH,sBAAnBA,KAAOwH,YAAYxH,sFAChBA,+LADHA,KAAOwH,YAAYxH,oKAS/BA,gBAAwCA,sBAA7C/C,sYAAK+C,6EAAL/C,sPAC8C,qBAC7B+C,KAAOwH,YAAYxH,sBAAnBA,KAAOwH,YAAYxH,sFAChBA,+LADHA,KAAOwH,YAAYxH,6NA5BvChH,OAAOyM,KAAKzF,KAAOwH,aAAavK,OAAS,kcAJjC+C,yRA3EEmK,EAAAjF,MAAAA,KAAAiF,oBAAAC,EAAAC,EAAAC,EAAAC,yRAMXC,EACAC,UAHOhB,eACAD,KAGPkB,KACAC,cA6BKC,IAxBP5R,OAAO6R,QAAQrC,EAAOhB,aAAapO,WAAU0R,EAAGrE,MAC9CA,EAAW6C,oBAIbtQ,OAAO6R,QAAQrC,EAAOhB,aAAapO,WAAUuP,EAAIlC,MAC/CA,EAAWyC,UAAU9P,SAAS2R,SAC5BvC,EAAOhB,YAAYuD,GAAYzB,kBAAqBd,EAAOhB,YAAYuD,GAAYzB,kBAAsBX,gBAmB7G+B,EAdO1R,OAAOyM,KAAK+C,EAAOhB,aAAawD,SAAQC,EAAKhB,oBACU,KAAb,QAA/CV,EAAgC,QAAhCb,EAAAF,EAAOhB,YAAYyC,cAAavB,SAAAA,EAAEY,yBAAaC,SAAAA,EAAEtM,SAC7B,MAAjBgN,MAA4BgB,EAAKhB,GAAgBgB,aAatDN,EARO3R,OAAOyM,KAAK+C,EAAOhB,aAAawD,SAAQC,EAAKhB,oBACH,QAA/CV,EAAgC,QAAhCb,EAAAF,EAAOhB,YAAYyC,cAAavB,SAAAA,EAAEY,yBAAaC,SAAAA,EAAEtM,QAAS,MAASgO,EAAKhB,GAAgBgB,sKAWpFxP,QAAa+O,EAAM,GAAG/O,OAC5BgP,EAAWD,EAAM,GAAGpP,KACpBgM,GAAM5M,IAAI0Q,KAAKC,MAAM1P,IAErBmP,yBAIMQ,EAAO/P,SAASC,cAAc,KAC9B+P,MAAWC,MAAMJ,KAAKK,UAAU/C,EAAQ,KAAM,KAAMxK,KAAO,qBAC3DwN,EAAMC,IAAIC,gBAAgBL,GAChCD,EAAKO,KAAOH,EACZJ,EAAKQ,SAAWnB,EAGhBpP,SAASwQ,KAAKjR,YAAYwQ,GAC1BA,EAAKU,QAGLzQ,SAASwQ,KAAK3Q,YAAYkQ,GAC1BK,IAAIM,gBAAgBP,+DAsBDhD,EAAOhB,YAAY,QAAnBgB,EAAOhB,YAAY,8CASfgB,EAAOhB,YAAY0C,QAAnB1B,EAAOhB,YAAY0C,8CAWnB1B,EAAOhB,YAAY0C,QAAnB1B,EAAOhB,YAAY0C,yBC1GlC,uFAAQ,CAChBxP,OAAQW,SAASwQ,KACjB9I,MAAO,CACHyG,SAAU,KACVC,OAAQ"}